/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
//Importacion de los analizadores
import Analizadores.analizador_lexico;
import Analizadores.analizador_sintactico;

import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.HashMap;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author 50232
 */
public class gui extends javax.swing.JFrame {

    //Variables Globales
    private static int contadorPestanas = 1;
    HashMap<JPanel, File> tabFileMap = new HashMap<>();

    /**
     * Creates new form gui
     */
    public gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jMenuBar2 = new javax.swing.JMenuBar();
        Guadar = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        Guardar = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu10 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 890, 160));

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Anterior");
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 380, -1, -1));

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Siguiente");
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 380, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Consola");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Entrada");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, 20));

        jButton4.setText("+Pestaña");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, -1));

        jButton3.setText("Ejecutar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Visualizacion de Graficas");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 318, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 308, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 60, 320, 310));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 500, 310));

        Guadar.setText("Archivo");
        Guadar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuadarActionPerformed(evt);
            }
        });

        jMenuItem3.setText("Nuevo Archivo");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        Guadar.add(jMenuItem3);

        jMenuItem4.setText("Abrir Archivo");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        Guadar.add(jMenuItem4);

        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });
        Guadar.add(Guardar);

        jMenuItem6.setText("Eliminar Pestaña");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        Guadar.add(jMenuItem6);

        jMenuBar2.add(Guadar);

        jMenu10.setText("Reportes");

        jMenuItem7.setText("Reporte de Tokens");
        jMenu10.add(jMenuItem7);

        jMenuItem8.setText("Reporte de errores");
        jMenu10.add(jMenuItem8);

        jMenuItem9.setText("Reporte de Tabla de Simbolos");
        jMenu10.add(jMenuItem9);

        jMenuBar2.add(jMenu10);

        setJMenuBar(jMenuBar2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout());  // Set the layout manager

        JTextArea textArea1 = new JTextArea();
        textArea1.setLineWrap(false);  // Desactiva el ajuste de línea para permitir el desplazamiento horizontal

        JScrollPane scrollPane = new JScrollPane(textArea1);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);  // Añade la barra de desplazamiento horizontal

        panel4.add(scrollPane, BorderLayout.CENTER);  // Add the scroll pane to the center of the panel

        jTabbedPane1.addTab("Archivo " + contadorPestanas, panel4);
        contadorPestanas++;

        // Añade una entrada al mapa con un archivo null, indicando que la pestaña aún no se ha guardado en un archivo
        tabFileMap.put(panel4, null);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        System.out.println("Hola mundo desde Nuevo Archivo");
// Abre una ventana para elegir la ruta y el nombre del archivo
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("Archivo DF", "df"));
        int returnValue = fileChooser.showSaveDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            // Verifica si el archivo tiene la extensión .df
            if (!file.getName().endsWith(".df")) {
                file = new File(file.getParentFile(), file.getName() + ".df");
            }
            try {
                // Crea el archivo
                if (file.createNewFile()) {
                    // Si el archivo se creó con éxito, abre una nueva pestaña
                    JPanel panel = new JPanel();
                    panel.setLayout(new BorderLayout());

                    JTextArea textArea = new JTextArea();
                    textArea.setLineWrap(false);

                    JScrollPane scrollPane = new JScrollPane(textArea);
                    scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
                    scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

                    panel.add(scrollPane, BorderLayout.CENTER);

                    // Añade la pestaña al JTabbedPane
                    jTabbedPane1.addTab(file.getName(), panel);
                    contadorPestanas++;

                    // Añade una entrada al mapa con el archivo
                    tabFileMap.put(panel, file);
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }


    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed

        // TODO add your handling code here:
        JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout());  // Set the layout manager

        JTextArea textArea1 = new JTextArea();
        textArea1.setLineWrap(false);  // Desactiva el ajuste de línea para permitir el desplazamiento horizontal

        JScrollPane scrollPane = new JScrollPane(textArea1);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);  // Añade la barra de desplazamiento horizontal

        panel4.add(scrollPane, BorderLayout.CENTER);  // Add the scroll pane to the center of the panel

        // Abre el archivo
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                FileReader fileReader = new FileReader(file);
                BufferedReader bufferedReader = new BufferedReader(fileReader);

                // Lee el archivo y muestra su contenido en la pestaña
                String line;
                while ((line = bufferedReader.readLine()) != null) {
                    textArea1.append(line + "\n");
                }

                // Cierra el archivo
                bufferedReader.close();

                // Añade la pestaña al JTabbedPane
                jTabbedPane1.addTab(file.getName(), panel4);
                contadorPestanas++;

                // Añade una entrada al mapa con el archivo
                tabFileMap.put(panel4, file);

            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        // TODO add your handling code here:
        int selectedIndex = jTabbedPane1.getSelectedIndex();
        JPanel selectedPanel = (JPanel) jTabbedPane1.getComponentAt(selectedIndex);
        JScrollPane scrollPane = (JScrollPane) selectedPanel.getComponent(0);
        JTextArea textArea = (JTextArea) scrollPane.getViewport().getView();
        String content = textArea.getText();

        File file = tabFileMap.get(selectedPanel);
        if (file != null) {
            // Si el archivo ya existe, guarda los cambios
            try ( PrintWriter out = new PrintWriter(file)) {
                out.println(content);
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
        } else {
            // Si el archivo no existe, abre una ventana para elegir la ruta y el nombre del archivo
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileFilter(new FileNameExtensionFilter("Archivo DF", "df"));
            int returnValue = fileChooser.showSaveDialog(null);
            if (returnValue == JFileChooser.APPROVE_OPTION) {
                File filee = fileChooser.getSelectedFile();
                // Verifica si el archivo tiene la extensión .df
                if (!filee.getName().endsWith(".df")) {
                    filee = new File(filee.getParentFile(), filee.getName() + ".df");
                }
                try ( PrintWriter out = new PrintWriter(filee)) {
                    out.println(content);
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                }
                // Actualiza el mapa con el nuevo archivo
                tabFileMap.put(selectedPanel, filee);

                // Actualiza el título de la pestaña con el nombre del archivo
                jTabbedPane1.setTitleAt(selectedIndex, filee.getName());
            }

        }
    }//GEN-LAST:event_GuardarActionPerformed

    private void GuadarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuadarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GuadarActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        int selectedIndex = jTabbedPane1.getSelectedIndex();
        if (selectedIndex != -1) {
            jTabbedPane1.removeTabAt(selectedIndex);
        }

    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedIndex = jTabbedPane1.getSelectedIndex();
        JPanel selectedPanel = (JPanel) jTabbedPane1.getComponentAt(selectedIndex);
        JScrollPane scrollPane = (JScrollPane) selectedPanel.getComponent(0);
        JTextArea textArea = (JTextArea) scrollPane.getViewport().getView();
        String codigo = textArea.getText();
                
    try {
        analizador_lexico scanner = new analizador_lexico(new java.io.StringReader(codigo));
        analizador_sintactico analizador = new analizador_sintactico(scanner);
        analizador.parse();
        System.out.println("Análisis finalizado");
    } catch (Exception e) {
        e.printStackTrace();
    }
         {
        
        
    }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Guadar;
    private javax.swing.JMenuItem Guardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
